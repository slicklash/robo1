const e="en",r="i18n",o={"r1.license":"This work is licensed under","r1.loading.label":"Loading...","r1.level.label":"Level","r1.level.solved":"Well done!","r1.lesson.label":"Lesson","r1.win.stars":"Collect all stars","r1.solve.label":"Solve","r1.lock-modal.title":"Confirmation","r1.lock-modal.text":"Do you really want to reset progress and lock all levels?","r1.yes.label":"Yes","r1.no.label":"No","r1.play-button.label":"Play","r1.next-button.label":"Next Level","r1.speed.label":"Speed","r1.error.hit_wall":"We hit a wall!","r1.error.no_energy":"No energy left!","r1.error.not_solved":"Level not solved. Try again!","r1.error.empty_block":"Empty block","r1.error.expected":"Expected {} but got {}","r1.error.function_exists":"Block '{}' already exists","r1.error.function_not_found":"Block '{}' not found","r1.error.invalid_condition":"Invalid condition '{}'","r1.error.invalid_distance":"Invalid distance '{}'","r1.error.invalid_energy":"Invalid energy '{}'","r1.error.invalid_energy_condition":"Invalid energy '{}'","r1.error.invalid_location":"Invalid location '{}'","r1.error.invalid_start":"Invalid start '{}'","r1.error.missing_function_args":"Expected {} arguments but got {}","r1.error.multiline_comment_not_closed":"Multi-line comment not closed","r1.error.multiline_not_supported":"Mult-line strings are not supported","r1.error.not_a_function":"Expected block but got {}","r1.error.optional_param_misplaced":"Optional parameters must be at the end","r1.error.top_level_expression":"Top level expressions are not allowed","r1.error.unexpected":"Unexpected '{}'","r1.error.unexpected_expression":"Unexpected '{}'","r1.error.unexpected_operator":"Unexpected '{}'","r1.error.unexpected_statement":"Unexpected '{}'","r1.error.unknown_command":"Uknown command '{}'","r1.error.variable_not_found":"Variable '{}' not found","r1.error.end_global_scope":"Error while cleaning memory","r1.error.invalid_angle":"Invalid angle '{}'","r1.error.invalid_size":"Invalid size '{}'","r1.error.invalid_zoom":"Invalid zoom '{}'","r1.error.read_ony_variable":"{} is read only","r1.error.check_failed":"Expected {} but got {}","r1.error.timeout":"Program took longer than {} seconds","r1.error.division_by_zero":"Division by zero"},n={type:"data",filePath:"/home/slicklash/code/robo1/src/content/i18n/en.json",rawData:""};export{n as _internal,r as collection,o as data,e as id};
